# ~/.zshrc file for zsh interactive shells.
# see /usr/share/doc/zsh/examples/zshrc for examples

#### VRKANSAGARA @START
source "$HOME/.vim/src/Dotfiles/shell/ssh.sh"
source "$HOME/.vim/src/Dotfiles/shell/functions.sh"

# Export general variables
#
export DEBIAN_FRONTEND=noninteractive
export SUDO="sudo"
if [ -f "$HOME/.profile" ]; then
    # Personal/Private/Secrect variable ( i.e. export ,alias )
   source "$HOME/.profile"
fi

# enable auto-suggestions based on the history
if [ -f /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh ]; then
    . /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh
    # change suggestion color
    ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=#999'
fi

# enable command-not-found if installed
if [ -f /etc/zsh_command_not_found ]; then
    . /etc/zsh_command_not_found
fi

## Original VRKANSAGARA start from bellow
# set -e # Thislkfjsflksdfjskfjslfsetting is telling the script to exit on a command error.kkkkkkks
# set -x # You refer to a noisy script.(Used to debugging)

# Enable colors and change prompt:
# autoload -U colors && colors  # Load colors
setopt autocd       # Automatically cd into typed directory.
# stty stop undef       # Disable ctrl-s to freeze terminal.
# setopt interactive_comments

COMPOSER_PROCESS_TIMEOUT=5000

# History in cache directory:
# HISTSIZE=10000000
# SAVEHIST=10000000
# HISTFILE=~/.vim/data/cache/zsh

## VIM plugines debug
export NVIM_COC_LOG_LEVEL=debug
export NVIM_COC_LOG_FILE="/tmp/coc-nvim.log"

# Used for the phpStorm program and java application to work with DWM
export _JAVA_AWT_WM_NONREPARENTING=1 # If you come from bash you might have to change your $PATH.
export AWT_TOOLKIT=MToolkit
# wmname LG3D

# export DISPLAY=$DISPLAY
export DISPLAY=:0.0

# useful command to find what you should be aliasing:
alias profileme="history | awk '{print \$2}' | awk 'BEGIN{FS=\"|\"}{print \$1}' | sort | uniq -c | sort -n | tail -n 20 | sort -nr"

# Yes,I use st( Terminal base would be xterm (to avoide VIM and Remote SSH X )
# export TERM=xterm
# Remote session would be xterm base (Avoide st-256 issue at remote)
alias ssh='env TERM=xterm ssh'
export GPG_TTY=$(tty)
# If you come from bash you might have to change your $PATH.
export PATH="$(getconf PATH)" # reset system default
export PATH="$HOME/bin:/usr/local/bin:$PATH"
export PATH="$HOME/.vim/bin:$HOME/.vim/vendor/bin:$PATH"
export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
export PATH="$HOME/.cargo/bin:$PATH"
export PATH="$HOME/.vim/node_modules/.bin:$PATH"
export PATH="/snap/bin:$PATH"
export PATH="$HOME/git/vrkansagara/voidrice/.local/bin/statusbar:$PATH"

# BEGIN SNIPPET: Magento Cloud CLI configuration
HOME=${HOME:-"/home/$USER"}
export PATH="$HOME/"'.magento-cloud/bin':"$PATH"
if [ -f "$HOME/"'.magento-cloud/shell-config.rc' ]; then . "$HOME/"'.magento-cloud/shell-config.rc'; fi
# END SNIPPET

# Path to your oh-my-zsh installation.
export ZSH="/home/$USER/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# ZSH_THEME="robbyrussell"
ZSH_THEME="agnoster"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git laravel)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='vim'
fi

# Compilation flags
export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

#### VRKANSAGARA @START
# https://rabexc.org/posts/pitfalls-of-ssh-agents ( Be careful !!! )
# ssh-add -l &>/dev/null
# if [ "$?" == 2 ]; then
#   test -r ~/.ssh-agent && \
#     eval "$(<~/.ssh-agent)" >/dev/null

#   ssh-add -l &>/dev/null
#   if [ "$?" == 2 ]; then
#     (umask 066; ssh-agent > ~/.ssh-agent)
#     eval "$(<~/.ssh-agent)" >/dev/null
#     ssh-add
#   fi
# fi

# some more ls aliases
alias ss='source ~/.zshrc'
alias ls='/bin/ls --human-readable --size -1 -S --classify -lAlhtra'
alias ll='/bin/ls -lhtraF'
alias la='ls -A'
alias l='ls -CF'

# Docker Related stuff #
# sudo curl -L
# "https://github.com/docker/compose/releases/download/1.28.2/docker-compose-$(uname
# -s)-$(uname -m)" -o /usr/local/bin/docker-compose
# sudo chmod +x /usr/local/bin/docker-compose
# dc up -dV --build --remove-orphan --force-recreate
alias d='docker '
alias de='docker exec -it '
alias dc='docker-compose '
alias dce='docker-compose exec -u $(whoami) '
alias dcE='docker-compose exec -u root '
alias ds='docker-compose ps --services'
alias dcb='docker-compose up -dV --build --remove-orphan --force-recreate '
alias dcu='docker-compose up -dV --remove-orphan --force-recreate '
alias dcl='docker-compose logs --follow --timestamps --tail 50 '
alias dIps="docker ps -q | xargs --no-run-if-empty -n 1 docker inspect --format '{{ .NetworkSettings.IPAddress }} {{ .Name }} {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' | sed 's/ \// /'"

#File Manager related stuff #

# Vim debug mode vim -u NONE --startuptime vim-NONE.log
alias v='vim -u NONE -N -U NONE'
alias vi='cd ~/.vim && vim'
alias viml='vim --startuptime /tmp/vim-startup.log'
alias vimDebug="vim --cmd 'profile start /tmp/vim-profiling.log' --cmd 'profile func *' --cmd 'profile file *' -c 'profdel func *' -c 'profdel file *' -c 'qa!'"

alias www='cd ~/www'
alias htdocs='cd ~/htdocs'
alias gh='cd ~/git'

alias du='/usr/bin/du -sh  '
alias free='/usr/bin/free -mh  '

# Git alias ( Apart from git config )
alias gc='git commit -S --signoff '
alias gcd='cd ./$(git rev-parse --show-cdup)'

## Linux Administator commands
alias myDmesgWatch='watch "dmesg | tail -20"'
alias myListen="sudo lsof -iTCP -sTCP:LISTEN -Pn"
alias myListeN="sudo netstat -natp"
alias myWatch="sudo watch ss -tp"
alias myWatchN="sudo netstat -A inet -p"
alias myWatchWho="sudo netstat -A inet -p | grep '^tcp' | grep '/' | sed 's_.*/__' | sort | uniq"
# alias myWatchWhO="sudo ss -tp | grep -v Recv-Q | sed -e 's/.*users:((\"//' -e 's/\".*$//' | sort | uniq"
alias myTop10Processes='ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%mem | head'
alias myTop10ProcessesVirtualMemeory='ps -eo vsz,pid,ppid,cmd,%mem,%cpu --sort=-vsz | head'
# Let’s view the threads of a process interactively by embedding our ps command in the –preview flag:
alias myPs="ps axo pid,rss,comm --no-headers | fzf --preview 'ps o args {1}; ps mu {1}'"
alias myPsMemory='ps -o pid,user,%mem,command ax | sort -b -k3 -r | fzf'
alias myPsilent='ps -ef | grep "teams\|skype\|slack" | grep -v grep | awk "{print \$2}" | xargs --no-run-if-empty  sudo kill 9'
# package dependencies
alias myDebDependencies="apt-cache search . | fzf --preview 'apt-cache depends {1}' "
alias myPublicIp='dig +short myip.opendns.com @resolver1.opendns.com'
alias myPublicIP='dig +short txt ch whoami.cloudflare @1.0.0.1'
alias myPublicIpCurl='curl -iH "Accept: text/plain" --silent https://www.cloudflare.com/cdn-cgi/trace 2>&1'
alias myPublicIpv4='dig -4 TXT +short o-o.myaddr.l.google.com @ns1.google.com'
alias myPublicIpv6='dig -6 TXT +short o-o.myaddr.l.google.com @ns1.google.com'
alias myAllIp="ip -4 addr | grep -oP '(?<=inet\s)\d+(\.\d+){3}'"
alias myIp="echo $(hostname -I | awk '{print $1}')"
alias myCpuInfo="lscpu | egrep 'Model name|Socket|Thread|NUMA|CPU\(s\)'"
# sensors| grep -i rpm | awk '{ print "Fan "$3"/"$11" RPM"}'
alias ownIt='sudo chown -Rf $USER:$USER '
alias ownItWithPermission='sudo chmod 0744 -Rf'
alias currentMonitor='xrandr | grep " connected" | cut -f1 -d " "'
alias setBrightness='echo "xrandr --output eDP-1 --brightness 0.75"'
alias setMyBrightness="echo 15000 | sudo tee  /sys/class/backlight/intel_backlight/brightness"
alias setMyBrightnessAnother="echo 7 | sudo tee /sys/class/backlight/acpi_video0/brightness"
alias myLimit="/usr/bin/cpulimit -c 30  "
alias myHtop="/usr/bin/htop -u $USER "
alias mtHtopDelay="/usr/bin/htop -u $USER -d 60"
alias myHtopFirefox="$(which htop) -p $(pidof firefox | sed 's/ /,/g')"

# For Git
alias myGitLs='for i in */; do (cd $i && echo -n "$(pwd) <=> " && git rev-parse --abbrev-ref HEAD);  done'
alias myGitLog="git log --oneline | fzf --preview 'git show --name-only {1}'"
# PHP Aliases
alias myPhpRun='php -S 0.0.0.0:12345 -d ./'
alias myPhpRunInPublic='php -S 0.0.0.0:12345 -d public/index.php -t public'

# File finder
alias myFindFile="sudo find / -type f  -name "
alias myFindDirectory="find / -type d  -name "
alias myFindLastModified="find $(pwd) \( ! -regex '.*/\..*' \) -type f -print0 | xargs --no-run-if-empty -0 stat --format '%Y :%y %n' | sort -nr | cut -d: -f2- | head"
# -r = recursive -n= line numer -w match whole world -e=pattern used for search
alias myFindTextIntoDirectory="grep -rnw -e "

# AWS Aliases
alias myaAsMyInfo='curl http://169.254.169.254/latest/meta-data/'

# PHP Laminas server
alias myPhpComposerRun='composer run-script serve --timeout 0'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

## Build related stuff"
# Build file should not have any unwanted variables.
alias makev="make --warn-undefined-variables "
alias gcc="gcc -g "
alias gdb="sudo gdb "

alias lkmLog="sudo tail -f /var/log/syslog"
alias lkmCrash="echo 'sudo /usr/bin/crash /var/crash/202110071450/dump.202110071450 /usr/lib/debug/boot/vmlinux-5.4.0-88-generic'"
alias zshCorruptHistoryRepair="mv ~/.zsh_history ~/.zsh_history_bad && strings -eS ~/.zsh_history_bad > ~/.zsh_history && fc -R ~/.zsh_history"

# source $HOME/.vim/src/Dotfiles/shell/bash_functions.sh

echo -ne '\e[5 q' # Use beam shape cursor on startup.
preexec() { echo -ne '\e[5 q' ;} # Use beam shape cursor for each new prompt.
bindkey -s '^f' 'cd "$(dirname "$(fzf)")"\n'
# bindkey -s '^r' 'history | fzf\n'
bindkey -s '^p' 'ps -aux | fzf\n'
bindkey -s '^h' 'htop -u $USER \n'

# [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Load Angular CLI autocompletion.
# source <(ng completion script)

# Let's rust do it's own
source "$HOME/.cargo/env"

command_exists ngrok && ngrok config add-authtoken $NGROK_TOKEN > /dev/null 2>&1
