# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet php "php7 opening"
<?php
declare(strict_types = 1);
endsnippet

snippet dbge "Add error reporting"
error_reporting(E_ALL); ini_set('display_errors', '1'); ini_set('display_startup_errors', '1'); ini_set('log_errors', '1');
endsnippet

snippet dbg "MVC print_r"
echo '<pre>'; print_r(${1}); echo __FILE__; echo __LINE__; exit;
endsnippet

snippet dbgg "MVC var_dump"
echo '<pre>'; var_dump(${1}); echo __FILE__; echo __LINE__; exit;
endsnippet

snippet microtimeStart "Microtime start"
define('PHP_START', microtime(true));
endsnippet

snippet test "PHPUnit test dock block"
/** @test */
endsnippet

snippet testPubf "PHPUnit public functin"
/** @test */
public function ${1}(){
	${2}
}
endsnippet

snippet lresponse "Laravel response"
$payLoad = [
	'message' => '${1}',
	'data' => ${2}
];
return $this->response($payLoad);
endsnippet

snippet tryCatch "MytryCatch"
try {
	${1}
} catch (Exception $exception) {
	throw $exception;
	${2}
}
endsnippet
